// Lab14_1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//В одномерном массиве, состоящем из n вещественных элементов, вычислить количество элементов массива, 
//меньших С, и сумму целых частей элементов массива, расположенных после последнего отрицательного элемента.

#include <iostream>
using namespace std;

int n, k, s, i;
double r, sum, imax, imin, c;
double iminn(int* i, int n)
{
    imin = i[0];
    for (k = 0; k < n; k++)
        if (imin > i[k])
        {
            imin = i[k];
        }
    return imin;
}
double imaxx(int* i, int n)// Функция находит максимальный элемент массива.
{

    imax = i[0];
    for (k = 0; k < n; k++)
    {
        if (imax < i[k])
        {
            imax = i[k];
        }
    }
    return imax;
}
void Bubble(int* i, int n)//пузырьковая сортировка, с условием, что, перестановка происходит, когда значение элемента отличается то следующего менее чем на 20%.
{
    imaxx(i, n);
    double r;
    bool flag;
    flag = true;
    while (flag)
    {
        flag = false;
        n--;
        for (k = 0; k < n; k++)
        {
            if ((i[k] + imax * 0.2) < imax)//Условие сортировки.
            {
                r = i[k];
                i[k] = i[k + 1];
                i[k + 1] = r;
                flag = true;
            }
        }
    }
}
double q1(int* i, int n)// функция вычисляет кол-во элементов меньших с.
{
    for (k = 0; k < n; k++)
    {
        if (i[k] < c)//Условие.
        {
            s = s++;//Счетчик.
        }
    }
    return s;
}
double q2(int* i, int n)//функция вычисляет сумму элементов, которые идут после первого отрицательного числа.
{
    bool tof;
    if ((imin > 0) || (k = n - 1 && r < 0))
    {
        tof = false;
    }
    else if (imin < 0)
    {
        for (k = 0; k < n; k++)
        {
            if (i[k] < 0)//Условие.
            {
                int k2 = k;
                for (k = k2 + 1; k < n; k++)
                    sum = sum + i[k];//Считаем сумму.
                tof = true;
            }
        }
    }
    return tof;
}
int main()
{
    setlocale(LC_ALL, ".1251");
    cout << "Введите кол-во элементов массива: ";
    cin >> n;
    cout << "\nВведите значение с: ";
    cin >> c;
    int* i = new int[n];
    for (k = 0; k < n; k++)
    {
        cout << " i[" << k << "]=";
        cin >> r;
        i[k] = r;
    }
    iminn(i, n);
    cout << "\nКоличество элементов, которые меньше " << c << "=" << q1(i, n) << endl;
    bool tof = q2(i, n);
    if (tof)
        cout << "\nСумма элементов после первого отрицательного числа =" << sum << endl;
    else
        cout << "\nСумму не вычислить, так как отрицательного элемента нет или он находится в конце массива.";
    cout << "\nПосле сортировки: " << endl;
    Bubble(i, n);
    for (int k = 0; k < n; k++)
    {
        cout << " [" << k << "] = ";
        cout << i[k] << endl;
    }
    delete[]i;
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
